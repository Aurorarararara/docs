import{_ as i,c as s,o as a,m as l,a as e}from"./chunks/framework.BS5Zd73-.js";const n="/assets/6.0PfvVWjY.png",_=JSON.parse('{"title":"11.事件流","description":"","frontmatter":{},"headers":[],"relativePath":"study/WebApI/事件流.md","filePath":"study/WebApI/事件流.md","lastUpdated":1705308995000}'),t={name:"study/WebApI/事件流.md"},u=l("div",null,[l("h1",{id:"_11-事件流",tabindex:"-1"},[e("11.事件流 "),l("a",{class:"header-anchor",href:"#_11-事件流","aria-label":'Permalink to "11.事件流"'},"​")]),l("h2",{id:"事件流与两个阶段说明",tabindex:"-1"},[e("事件流与两个阶段说明 "),l("a",{class:"header-anchor",href:"#事件流与两个阶段说明","aria-label":'Permalink to "事件流与两个阶段说明"'},"​")]),l("ul",null,[l("li",null,[l("strong",null,"事件流"),e("指的是事件完整执行过程中的流动路径")])]),l("p",null,[l("img",{src:n,alt:"Alt text"})]),l("ul",null,[l("li",null,"说明：假设页面里有个div，当触发事件时，会经历两个阶段，分别是捕获阶段、冒泡阶段"),l("li",null,"简单来说：捕获阶段是 从父到子 冒泡阶段是从子到父")]),l("h2",{id:"事件捕获和事件冒泡",tabindex:"-1"},[e("事件捕获和事件冒泡 "),l("a",{class:"header-anchor",href:"#事件捕获和事件冒泡","aria-label":'Permalink to "事件捕获和事件冒泡"'},"​")]),l("p",null,[l("strong",null,"事件冒泡概念：")]),l("p",null,"当一个元素的事件被触发时，同样的时间将会在该元素的所有祖先元素中依次触发。这一过程被称为事件冒泡"),l("p",null,[l("strong",null,"简单理解：")]),l("p",null,"当一个元素触发事件后，会依次向上调用所有父级元素的同名事件"),l("h2",{id:"阻止事件流动",tabindex:"-1"},[e("阻止事件流动 "),l("a",{class:"header-anchor",href:"#阻止事件流动","aria-label":'Permalink to "阻止事件流动"'},"​")]),l("ul",null,[l("li",null,"因为默认就有冒泡模型的存在，所以容易导致事件影响到父级元素"),l("li",null,"若想把事件就限制在当前元素内，就需要阻止事件流动"),l("li",null,"阻止事件流动需要拿到事件对象"),l("li",null,"语法：")]),l("div",{class:"language-js vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"js"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code","v-pre":""},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"事件对象."),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"stopPropagation"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")])])])]),l("ul",null,[l("li",null,[l("p",null,"鼠标经事件："),l("ul",null,[l("li",null,"mouseover 和 mouseout 会有冒泡效果"),l("li",null,"mouseener 和 mouseleave 没有冒泡效果（推荐）")])]),l("li",null,[l("p",null,"阻止默认行为，比如链接点击不跳转，表单域跳转")]),l("li",null,[l("p",null,"语法：")])]),l("div",{class:"language-js vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"},"js"),l("pre",{class:"shiki shiki-themes github-light github-dark vp-code","v-pre":""},[l("code",null,[l("span",{class:"line"},[l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"e."),l("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"preventDefault"),l("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")])])])]),l("ul",null,[l("li",null,"两种注册事件的区别："),l("li",null,[e("传统on注册(L0) "),l("ul",null,[l("li",null,[e("同一对象，后面注册的事件"),l("strong",null,"会覆盖前面注册(同一个事件)")]),l("li",null,"直接使用null覆盖偶就可以实现事件的解绑"),l("li",null,"都是冒泡阶段执行的")])]),l("li",null,[e("事件监听注册(L2) "),l("ul",null,[l("li",null,"语法：addEventListener(事件类型，事件处理函数，是否使用捕获)"),l("li",null,"后面注册的事件不会覆盖前面注册的事件(同一个事件)"),l("li",null,"可以通过第三个参数去确定实在冒泡或者捕获阶段执行"),l("li",null,"必须使用removeEventListener(事件类型，事件处理函数，获取捕获或者冒泡阶段)"),l("li",null,"匿名函数无法被解绑")])])])],-1),r=[u];function o(h,d,p,c,k,g){return a(),s("div",null,r)}const v=i(t,[["render",o]]);export{_ as __pageData,v as default};
